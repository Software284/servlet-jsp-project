package com.lamichhane.springsecurity.config;

import javax.sql.DataSource;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.ComponentScan;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.PropertySource;
import org.springframework.core.env.Environment;
import org.springframework.web.servlet.ViewResolver;
import org.springframework.web.servlet.config.annotation.EnableWebMvc;
import org.springframework.web.servlet.view.InternalResourceViewResolver;

import com.mchange.v2.c3p0.ComboPooledDataSource;

@Configuration
@EnableWebMvc
@ComponentScan("com.lamichhane.springsecurity")
@PropertySource("classpath:persistance-oracle.properties")
public class DemoAppConfig 
{
	@Autowired
	private Environment env;
	
	
	@Bean
	public ViewResolver viewResolver()
	{
		InternalResourceViewResolver resolver=new InternalResourceViewResolver();
		resolver.setPrefix("/WEB-INF/view/");
		resolver.setSuffix(".jsp");
		return resolver;
	}
	
	private int getIntProperty(String propnName)
	{
		String propVal=env.getProperty(propnName);
		int intPropVal=Integer.parseInt(propVal);
		return intPropVal;
	}
	
	@Bean
	public DataSource securityDataSource()
	{
		ComboPooledDataSource securityDataSource=new ComboPooledDataSource();
	try
	{
		
		securityDataSource.setDriverClass(env.getProperty("jdbc.driver"));
	}
	catch(Exception e)
	{
		
	}
	
	securityDataSource.setJdbcUrl(env.getProperty("jdbc.url"));
	securityDataSource.setUser(env.getProperty("jdbc.user"));
	securityDataSource.setPassword(env.getProperty("jdbc.password"));
	securityDataSource.setInitialPoolSize(getIntProperty(env.getProperty("connection.pool.initialPoolSize")));
	securityDataSource.setMinPoolSize(getIntProperty("connection.pool.minPoolSizee"));
	securityDataSource.setMaxIdleTime(getIntProperty("connection.pool.maxIdleTime"));
	securityDataSource.setMaxPoolSize(getIntProperty("connection.pool.maxPoolSize"));
	
	return securityDataSource;
	}
	
	
	
	

}
